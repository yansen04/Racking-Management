// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Warehouse {
  id        String    @id @default(cuid())
  code      String    @unique
  name      String
  address   String?
  createdAt DateTime  @default(now())
  locations Location[]
}

model Location {
  id          String     @id @default(cuid())
  code        String
  description String?
  warehouse   Warehouse  @relation(fields: [warehouseId], references: [id])
  warehouseId String
  createdAt   DateTime   @default(now())
  inventory   Inventory[]
  movementsFrom Movement[] @relation("fromLocation")
  movementsTo   Movement[] @relation("toLocation")

  @@unique([code, warehouseId])
}

model Item {
  id        String     @id @default(cuid())
  sku       String     @unique
  name      String
  barcode   String?
  createdAt DateTime   @default(now())
  inventory Inventory[]
  movements Movement[]
}

model Inventory {
  id         String   @id @default(cuid())
  item       Item     @relation(fields: [itemId], references: [id])
  itemId     String
  location   Location @relation(fields: [locationId], references: [id])
  locationId String
  quantity   Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([itemId, locationId])
}

enum MovementType {
  PLACEMENT
  RETRIEVAL
  TRANSFER
}

model Movement {
  id             String        @id @default(cuid())
  type           MovementType
  item           Item          @relation(fields: [itemId], references: [id])
  itemId         String
  fromLocation   Location?     @relation("fromLocation", fields: [fromLocationId], references: [id])
  fromLocationId String?
  toLocation     Location?     @relation("toLocation", fields: [toLocationId], references: [id])
  toLocationId   String?
  quantity       Int
  createdAt      DateTime      @default(now())
}
